<?xml version="1.0" encoding="UTF-8"?>
<configuration>

    <if condition='!isDefined("SAM_LOG_APPENDER")'>
        <then>
            <variable name="SAM_LOG_APPENDER" value="console" />
        </then>
    </if>

    <appender name="console" class="ch.qos.logback.core.ConsoleAppender">
        <encoder class="net.logstash.logback.encoder.LogstashEncoder">
            <fieldNames>
                <level>severity</level>
            </fieldNames>
        </encoder>
    </appender>

    <appender name="Console-Stackdriver" class="ch.qos.logback.core.ConsoleAppender">
        <encoder class="ch.qos.logback.core.encoder.LayoutWrappingEncoder">
            <layout class="org.springframework.cloud.gcp.logging.StackdriverJsonLayout">
                <includeTraceId>true</includeTraceId>
                <includeSpanId>true</includeSpanId>
            </layout>
        </encoder>
    </appender>

    <appender name="Console-Standard" class="ch.qos.logback.core.ConsoleAppender">
        <encoder class="ch.qos.logback.classic.encoder.PatternLayoutEncoder">
            <Pattern>%date %-5level [%thread] %logger{36}: %message%n</Pattern>
        </encoder>
    </appender>

    <appender name="file" class="ch.qos.logback.core.rolling.RollingFileAppender">
        <file>log/sam.log</file>
        <append>true</append>
        <rollingPolicy class="ch.qos.logback.core.rolling.TimeBasedRollingPolicy">
            <!-- daily rollover -->
            <fileNamePattern>sam.%d{yyyy-MM-dd}.log</fileNamePattern>
            <!-- keep 30 days' worth of history -->
            <maxHistory>30</maxHistory>
        </rollingPolicy>
        <!-- encoders are assigned the type
             ch.qos.logback.classic.encoder.PatternLayoutEncoder by default -->
        <encoder>
            <pattern>[%level] [%d{HH:mm:ss.SSS}] [%thread] %logger{36} - %msg%n</pattern>
        </encoder>
    </appender>

    <appender name="SYSLOG" class="ch.qos.logback.classic.net.SyslogAppender">
        <syslogHost>127.0.0.1</syslogHost>
        <facility>AUDIT</facility>
        <suffixPattern>[%level] [%d{HH:mm:ss.SSS}] [%thread] %logger{36} - %msg%n</suffixPattern>
    </appender>

    <!-- Configure the Sentry appender, overriding the logging threshold to the WARN level -->
    <appender name="Sentry" class="com.getsentry.raven.logback.SentryAppender">
        <filter class="ch.qos.logback.classic.filter.ThresholdFilter">
            <level>ERROR</level>
        </filter>
    </appender>


    <logger name="org.broadinstitute.dsde" level="info" additivity="false">
        <appender-ref ref="file"/>
        <appender-ref ref="${SAM_LOG_APPENDER}"/>
        <appender-ref ref="SYSLOG"/>
        <appender-ref ref="Sentry" />
    </logger>


    <logger name="akka" level="info" additivity="false">
        <appender-ref ref="file"/>
        <appender-ref ref="${SAM_LOG_APPENDER}"/>
        <appender-ref ref="SYSLOG"/>
        <appender-ref ref="Sentry" />
    </logger>

    <logger name="org.broadinstitute.dsde.workbench.google" level="debug" additivity="false">
        <appender-ref ref="file"/>
        <appender-ref ref="${SAM_LOG_APPENDER}"/>
        <appender-ref ref="SYSLOG"/>
        <appender-ref ref="Sentry" />
    </logger>

    <!-- publishing messages can be too verbose logging -->
    <logger name="org.broadinstitute.dsde.workbench.google.HttpGooglePubSubDAO" level="info" additivity="false">
        <appender-ref ref="file"/>
        <appender-ref ref="${SAM_LOG_APPENDER}"/>
        <appender-ref ref="SYSLOG"/>
        <appender-ref ref="Sentry" />
    </logger>

    <root level="warn">
        <appender-ref ref="file"/>
        <appender-ref ref="${SAM_LOG_APPENDER}"/>
        <appender-ref ref="SYSLOG"/>
        <appender-ref ref="Sentry" />
    </root>

</configuration>


