swagger: '2.0'

info:
  title: Sam
  description: |
    Workbench identity and access management.
  version: "0.1"
  license:
    name: BSD
    url: http://opensource.org/licenses/BSD-3-Clause
  termsOfService: https://github.com/broadinstitute/sam

basePath: /

produces:
  - application/json

security:
  - googleoauth:
      - openid
      - email
      - profile

securityDefinitions:
  googleoauth:
    type: oauth2
    authorizationUrl: 'https://accounts.google.com/o/oauth2/auth'
    flow: implicit
    scopes:
      openid: open id authorization
      email: email authorization
      profile: profile authorization

##########################################################################################
## PATHS
##########################################################################################
paths:

  /api/admin/user/{userId}:
    get:
      summary: gets the registration status of the specified user
      parameters:
        - in: path
          description: User ID to check the status of
          name: userId
          required: true
          type: string
      operationId: adminGetUserStatus
      tags:
        - Admin

  /api/admin/user/{userId}/disable:
    put:
      summary: disables the specified user
      parameters:
        - in: path
          description: User ID to disable
          name: userId
          required: true
          type: string
      operationId: disableUser
      tags:
        - Admin

  /api/admin/user/{userId}/enable:
    put:
      summary: enables the specified user
      parameters:
        - in: path
          description: User ID to enable
          name: userId
          required: true
          type: string
      operationId: enableUser
      tags:
        - Admin

  /api/resource/{resourceTypeName}/{resourceId}:
    delete:
      summary: Delete a resource
      responses:
        204:
          description: Successfully deleted resource
        403:
          description: You do not have permission to perform this action on the resource
        404:
          description: Resource type does not exist or you are not a member of any policy on the resource
      parameters:
        - in: path
          description: Type of the resource
          name: resourceTypeName
          required: true
          type: string
        - in: path
          description: Id of the resource
          name: resourceId
          required: true
          type: string
      operationId: deleteResource
      tags:
        - Resources
    post:
      summary: Create a new resource
      responses:
        204:
          description: Successfully created resource
        409:
          description: Resource already exists
          schema:
            $ref: '#/definitions/ErrorReport'
        500:
          description: Internal Error
          schema:
            $ref: '#/definitions/ErrorReport'
      parameters:
        - in: path
          description: Type of resource to create
          name: resourceTypeName
          required: true
          type: string
        - in: path
          description: Id of resource to create, must be unique for all resources of given type
          name: resourceId
          required: true
          type: string
      operationId: createResource
      tags:
        - Resources

  /api/resource/{resourceTypeName}/{resourceId}/policies:
    get:
      summary: List the policies for a resource
      responses:
        200:
          description: Policies successfully listed
          schema:
            type: array
            items:
              $ref: '#/definitions/AccessPolicyResponseEntry'
        403:
          description: You do not have permission to perform this action on the resource
        404:
          description: Resource type does not exist or you are not a member of any policy on the resource
        500:
          description: Internal Error
          schema:
            $ref: '#/definitions/ErrorReport'
      parameters:
        - in: path
          description: Type of resource
          name: resourceTypeName
          required: true
          type: string
        - in: path
          description: Id of resource
          name: resourceId
          required: true
          type: string
      operationId: listResourcePolicies
      tags:
        - Resources

  /api/resource/{resourceTypeName}/{resourceId}/policies/{policyName}:
    put:
      summary: Overwrite a policy on a resource
      responses:
        201:
          description: Policy successfully created/updated
          schema:
            type: array
            items:
              type: string
        403:
          description: You do not have permission to perform this action on the resource
        404:
          description: Resource type does not exist or you are not a member of any policy on the resource
        500:
          description: Internal Error
          schema:
            $ref: '#/definitions/ErrorReport'
      parameters:
        - in: path
          description: Type of resource
          name: resourceTypeName
          required: true
          type: string
        - in: path
          description: Id of resource
          name: resourceId
          required: true
          type: string
        - in: path
          description: Name of the policy
          name: policyName
          required: true
          type: string
        - in: body
          description: The details of the policy
          name: policyCreate
          required: true
          schema:
            $ref: '#/definitions/AccessPolicyMembership'
      operationId: overwritePolicy
      tags:
        - Resources

  /api/resource/{resourceTypeName}/{resourceId}/roles:
    get:
      summary: Query for the list of roles that the requesting user has on the resource
      responses:
        200:
          description: The list of roles that the requesting user has on the resource. Empty if resource does not exist or user has no role on that resource.
          schema:
            type: array
            items:
              type: string
        404:
          description: Resource type does not exist
        500:
          description: Internal Error
          schema:
            $ref: '#/definitions/ErrorReport'
      parameters:
        - in: path
          description: Type of resource to query
          name: resourceTypeName
          required: true
          type: string
        - in: path
          description: Id of resource to query
          name: resourceId
          required: true
          type: string
      operationId: resourceRoles
      tags:
        - Resources

  /api/resource/{resourceTypeName}/{resourceId}/action/{action}:
    get:
      summary: Query if requesting user may perform the action
      responses:
        200:
          description: true if the user may perform the action, false if they may not or the resource does not exist
          schema:
            type: boolean
        500:
          description: Internal Error
          schema:
            $ref: '#/definitions/ErrorReport'
      parameters:
        - in: path
          description: Type of resource to query
          name: resourceTypeName
          required: true
          type: string
        - in: path
          description: Id of resource to query
          name: resourceId
          required: true
          type: string
        - in: path
          description: Action to perform
          name: action
          required: true
          type: string
      operationId: resourceAction
      tags:
        - Resources

  /api/resourceTypes:
    get:
      responses:
        200:
          description: Success
          schema:
            type: array
            items:
              $ref: '#/definitions/ResourceType'
        500:
          description: Internal Error
          schema:
            $ref: '#/definitions/ErrorReport'
      summary: Lists available resource types
      operationId: listResourceTypes
      tags:
        - Resources

  /register/user:
    get:
      summary: gets the registration status of the logged in user
      responses:
        200:
          description: 'user exists'
          schema:
            $ref: '#/definitions/UserStatus'
        404:
          description: user not found
          schema:
            $ref: '#/definitions/ErrorReport'
      operationId: getUserStatus
      tags:
        - Users
    post:
      summary: create current user in the system using login credentials
      responses:
        201:
          description: 'user successfully created'
          schema:
            $ref: '#/definitions/UserStatus'
        409:
          description: user already exists
          schema:
            $ref: '#/definitions/ErrorReport'
      operationId: createUser
      tags:
        - Users

  /status:
    get:
      summary: gets system status
      responses:
        200:
          description: 'system ok'
          schema:
            $ref: '#/definitions/SystemStatus'
        500:
          description: 'one or more subsystems down'
          schema:
            $ref: '#/definitions/SystemStatus'
      operationId: getSystemStatus
      tags:
        - Status
      security: [] # no security

##########################################################################################
## DEFINITIONS
##########################################################################################
definitions:

  AccessPolicyResponseEntry:
    description: ''
    required:
      - policyName
      - policy
    properties:
      policyName:
        type: string
      policy:
        $ref: '#/definitions/AccessPolicyMembership'

  AccessPolicyMembership:
    description: ''
    required:
      - memberEmails
      - actions
      - roles
    properties:
      memberEmails:
        type: array
        items:
          type: string
      actions:
        type: array
        items:
          type: string
      roles:
        type: array
        items:
          type: string

  Enabled:
    description: ''
    required:
      - ldap
      - allUsersGroup
      - google
    properties:
      ldap:
        type: boolean
        description: true if the user is enabled in ldap
      allUsersGroup:
        type: boolean
        description: true if the user is in the all users group
      google:
        type: boolean
        description: true if the user is in their proxy group

  ErrorReport:
    description: ''
    required:
      - source
      - message
      - causes
      - stackTrace
    properties:
      source:
        type: string
        description: service causing error
      message:
        type: string
        description: what went wrong
      exceptionClass:
        type: string
        description: class of exception thrown
      statusCode:
        type: integer
        description: HTTP status code
      causes:
        type: array
        description: errors triggering this one
        items:
          $ref: '#/definitions/ErrorReport'
      stackTrace:
        type: array
        description: stack trace
        items:
          $ref: '#/definitions/StackTraceElement'

  ResourceRole:
    type: object
    description: 'specification of a role for a resource'
    required:
      - roleName
      - actions
    properties:
      roleName:
        type: string
        description: The name of the role
      actions:
        type: array
        items:
          type: string
        description: List of actions that can be performed by members of this role

  ResourceType:
    type: object
    description: 'specification of a type of resource'
    required:
      - name
      - actions
      - roles
      - ownerRoleName
    properties:
      name:
        type: string
        description: The name of the resource type
      actions:
        type: array
        items:
          type: string
        description: List of actions that can be performed on a resource of this type
      roles:
        type: array
        description: List of roles that may exist on a resource of this type
        items:
          $ref: '#/definitions/ResourceRole'
      ownerRoleName:
        type: string
        description: The name of the role that can perform administrative functions on a resource of this type

  StackTraceElement:
    description: ''
    required:
      - className
      - methodName
      - fileName
      - lineNumber
    properties:
      className:
        type: string
        description: class name
      methodName:
        type: string
        description: method name
      fileName:
        type: string
        description: source file name
      lineNumber:
        type: integer
        description: line number

  SubsystemStatus:
    description: status of a subsystem Sam depends on
    properties:
      ok:
        type: boolean
        description: whether this system is up or down from Sam's point of view
      messages:
        type: array
        items:
          type: string

  SystemStatus:
    description: status of each aubsystem Sam depends on
    type: object
    required:
      - ok
      - systems
    properties:
      ok:
        type: boolean
        description: true if everything is ok, false if anything is amiss
      systems:
        type: object
        description: Map[String, SubsystemStatus]

  UserInfo:
    description: ''
    required:
      - id
      - email
    properties:
      userSubjectId:
        type: string
        description: user id
      userEmail:
        type: string
        description: user email

  UserStatus:
    description: ''
    required:
      - id
    properties:
      userInfo:
        $ref: '#/definitions/UserInfo'
        description: the user's details
      enabled:
        $ref: '#/definitions/Enabled'
        description: the status of the user's account