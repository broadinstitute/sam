akka {
  http {
    server {
      idle-timeout = 180 s
      request-timeout = 60 s
    }
    host-connection-pool {
      max-open-requests = 16384
      max-connections = 2000
    }
  }
}

emailDomain = ${?EMAIL_DOMAIN}

termsOfService {
  enabled = ${?TOS_ENABLED}
  isGracePeriodEnabled = ${?TOS_GRACE_PERIOD_ENABLED}
  version = ${?TOS_VERSION}
  url = ${?TOS_URL}
}

oidc {
  authorityEndpoint = ${?OIDC_AUTHORITY_ENDPOINT}
  oidcClientId = ${?OIDC_CLIENT_ID}
  oidcClientSecret = ${?OIDC_CLIENT_SECRET}
  legacyGoogleClientId = ${?LEGACY_GOOGLE_CLIENT_ID}
}

schemaLock {
  lockSchemaOnBoot = true
  recheckTimeInterval = 5
  maxTimeToWait = 60
  instanceId = ${?SCHEMA_LOCK_INSTANCE_ID}
}

googleServices {
  appName = "firecloud:sam"
  appsDomain = ${?GOOGLE_APPS_SUBDOMAIN}
  environment = ${?ENVIRONMENT}
  pathToPem = "/etc/sam-account.pem"
  pathToDefaultCredentialJson = "/etc/sam-account.json"
  pathToFirestoreCredentialJson = "/etc/sam-firestore-account.json"
  serviceAccountClientId = ${?SERVICE_ACCOUNT_CLIENT_ID}
  serviceAccountClientEmail = ${?SERVICE_ACCOUNT_CLIENT_EMAIL}
  serviceAccountClientProject = ${?SERVICE_ACCOUNT_CLIENT_PROJECT_ID}
  subEmail = ${?GOOGLE_SUBDOMAIN_EMAIL}
  projectServiceAccount = ${?GOOGLE_PROJECT_SERVICE_ACCOUNT}
  terraGoogleOrgNumber = ${?TERRA_GOOGLE_ORG_NUMBER}
  groupSync {
    pubSubProject = ${?GOOGLE_PROJECT}
    pollInterval = 1m
    pollJitter = 10s
    pubSubTopic = ${?GOOGLE_PUB_SUB_TOPIC}
    pubSubSubscription = ${?GOOGLE_PUB_SUB_SUBSCRIPTION}
    workerCount = 5
  }
  disableUsers {
    pubSubProject = ${?GOOGLE_PROJECT}
    pollInterval = 1m
    pollJitter = 10s
    pubSubTopic = "terra-cryptomining"
    pubSubSubscription = "sam-disable-users-subscription"
    workerCount = 5
  }
  googleKeyCache {
    bucketName = ${?GOOGLE_KEY_CACHE_BUCKET_NAME}
    activeKeyMaxAge = 12
    retiredKeyMaxAge = 60
    monitor {
      pubSubProject = ${?GOOGLE_PROJECT}
      pollInterval = 1m
      pollJitter = 10s
      # Historically, there was a single bucket per google project, so a single pub/sub topic
      #      for that bucket works. In k8s, we want multiple environments per google project, so we
      #      want multiple buckets in a project and a pub/sub topic per bucket.
      pubSubTopic = sam-google-key-cache
      pubSubSubscription = sam-google-key-cache-sub
      workerCount = 1
    }
  }
  kms {
    project = ${?GOOGLE_PROJECT}
    location = "global"
    keyRingId = ${?GOOGLE_KMS_KEY_RING_ID}
    keyId = "dockerhub-key"
    rotationPeriod = "90 days"
  }
  notifications {
    project = ${?GOOGLE_PROJECT}
    topicName = ${?GOOGLE_NOTIFICATIONS_TOPIC_NAME}
  }
  adminSdkServiceAccounts = [
    ${?ADMIN_SDK_SERVICE_ACCOUNT_1}
    ${?ADMIN_SDK_SERVICE_ACCOUNT_2}
    ${?ADMIN_SDK_SERVICE_ACCOUNT_3}
  ]
  adminSdkServiceAccountPaths = [
    "/etc/admin-service-account-0.json"
    "/etc/admin-service-account-1.json"
    "/etc/admin-service-account-2.json"
  ]
}
