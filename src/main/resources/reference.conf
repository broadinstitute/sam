akka.http.server.idle-timeout = 180 s
akka.http.server.request-timeout = 60 s

resourceTypes =
  {
    workspace = {
      actionPatterns = ["delete", "read_policies", "share_policy::owner", "share_policy::writer", "share_policy::reader", "read_policy::owner", "read_policy::project-owner"]
      ownerRoleName = "owner"
      roles = {
        owner = {
          roleActions = ["delete", "read_policies", "share_policy::owner", "share_policy::writer", "share_policy::reader", "read_policy::project-owner"]
        },
        writer = {
          roleActions = ["read_policy::owner", "read_policy::project-owner"]
        },
        reader = {
          roleActions = ["read_policy::owner", "read_policy::project-owner"]
        }
      }
      reuseIds = false
    },
    managed-group = {
      actionPatterns = ["delete", "read_policies", "share_policy::admin", "share_policy::member", "read_policy::admin", "read_policy::member"]
      ownerRoleName = "admin"
      roles = {
        admin = {
          roleActions = ["delete", "read_policies", "share_policy::admin", "share_policy::member", "read_policy::admin", "read_policy::member"]
        },
        member = {
          roleActions = []
        }
      }
      reuseIds = true
    },
    workflow-collection = {
      actionPatterns = ["delete", "add", "view", "abort", "update", "alter_policies", "read_policies"]
      ownerRoleName = "owner"
      roles = {
        owner = {
          roleActions = ["delete", "add", "view", "abort", "update", "alter_policies", "read_policies"]
        },
        reader = {
          roleActions = ["view"]
        },
        writer = {
          roleActions = ["view", "add", "delete", "abort", "update"]
        }
      }
      reuseIds = false
    },
    caas = {
      actionPatterns = ["get_whitelist", "alter_policies", "read_policies"]
      ownerRoleName = "owner"
      roles = {
       owner = {
        roleActions = ["alter_policies", "read_policies"]
       },
       cromiam = {
        roleActions = ["get_whitelist"]
       }
      }
      reuseIds = false
    },
    billing-project = {
      actionPatterns = ["create_workspace", "alter_policies", "read_policies", "launch_batch_compute", "list_notebook_cluster", "launch_notebook_cluster", "sync_notebook_cluster", "delete_notebook_cluster", "stop_start_notebook_cluster", "alter_google_role", "share_policy::.+", "read_policy::.+"]
      ownerRoleName = "owner"
      roles = {
        owner = {
          roleActions = ["create_workspace", "alter_policies", "read_policies", "launch_batch_compute", "list_notebook_cluster", "launch_notebook_cluster", "sync_notebook_cluster", "delete_notebook_cluster", "alter_google_role"]
        },
        workspace-creator = {
          roleActions = ["create_workspace", "share_policy::can-compute-user", "read_policy::can-compute-user"]
        },
        batch-compute-user = {
          roleActions = ["launch_batch_compute"]
        },
        notebook-user = {
          roleActions = ["launch_notebook_cluster"]
        }
      }
      reuseIds = true
    },
    notebook-cluster = {
      actionPatterns = ["status", "connect", "sync", "delete", "read_policies", "stop_start"]
      ownerRoleName = "creator"
      roles = {
        creator = {
          roleActions = ["status", "connect", "sync", "delete", "read_policies", "stop_start"]
        }
      }
      reuseIds = true
    },
    cloud-extension = {
      actionPatterns = ["get_pet_private_key", "alter_policies", "read_policies"]
      ownerRoleName = "owner"
      roles = {
        owner = {
          roleActions = ["alter_policies", "read_policies"]
        },
        google = {
          roleActions = ["get_pet_private_key"]
        }
      }
      reuseIds = false
    }
  }
