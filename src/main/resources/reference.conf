akka.http.server.idle-timeout = 180 s
akka.http.server.request-timeout = 60 s

resourceTypes = {
  workspace = {
    actionPatternObjects = {
      delete = {
        description = "delete this workspace"
      }
      read_policies = {
        description = "view all policies and policy details for this workspace"
      }
      "share_policy::owner" = {
        description = "change the membership of the owner policy for this workspace"
      }
      "share_policy::writer" = {
        description = "change the membership of the writer policy for this workspace"
      }
      "share_policy::reader" = {
        description = "change the membership of the reader policy for this workspace"
      }
      "read_policy::owner" = {
        description = "view the details of the owner policy for this workspace"
      }
      "read_policy::project-owner" = {
        description = "view the details of the project-owner policy for this workspace"
      }
    }
    ownerRoleName = "owner"
    roles = {
      owner = {
        roleActions = ["delete", "read_policies", "share_policy::owner", "share_policy::writer", "share_policy::reader", "read_policy::project-owner"]
      }
      writer = {
        roleActions = ["read_policy::owner", "read_policy::project-owner"]
      }
      reader = {
        roleActions = ["read_policy::owner", "read_policy::project-owner"]
      }
    }
    reuseIds = false
  }
  managed-group = {
    actionPatternObjects = {
      delete = {
        description = "Delete this group"
      }
      read_policies = {
        description = "view all policies and policy details for this group"
      }
      "share_policy::admin" = {
        description = "change the membership of the admin policy for this group"
      }
      "share_policy::member" = {
        description = "change the membership of the member policy for this group"
      }
      "share_policy::admin-notifier" = {
        description = "change the membership of the admin-notifier policy for this group"
      }
      "read_policy::admin" = {
        # Doug Said this may be redundant with "read_policies" and could be removed
        description = "view the details of the admin policy for this group"
      }
      "read_policy::member" = {
        # Doug Said this may be redundant with "read_policies" and could be removed
        description = "view the details of the member policy for this group"
      }
      "read_policy::admin-notifier" = {
        description = "view the details of the admin-notifier policy for this group"
      }
      "notify_admins" = {
        description = "send notifications to the admins of this group"
      }
    }
    ownerRoleName = "admin"
    roles = {
      admin = {
        roleActions = ["delete", "read_policies", "share_policy::admin", "share_policy::member", "read_policy::admin", "read_policy::member"]
      }
      member = {
        roleActions = []
      }
      admin-notifier = {
        roleActions = ["notify_admins"]
      }
    }
    reuseIds = true
  }
  workflow-collection = {
    actionPatternObjects = {
      delete = {
        description = "delete this workflow-collection"
      }
      add = {
        description = "add workflows to this workflow-collection"
      }
      view = {
        description = "list workflows and workflow details in this workflow-collection"
      }
      abort = {
        description = "abort any workflow in this workflow-collection"
      }
      update = {
        description = "update any workflow in this workflow-collection"
      }
      alter_policies = {
        description = "create and delete policies on this workflow-collection"
      }
      read_policies = {
        description = "view all policies and policy details for this workflow-collection"
      }
    }
    ownerRoleName = "owner"
    roles = {
      owner = {
        roleActions = ["delete", "add", "view", "abort", "update", "alter_policies", "read_policies"]
      }
      reader = {
        roleActions = ["view"]
      }
      writer = {
        roleActions = ["view", "add", "delete", "abort", "update"]
      }
    }
    reuseIds = false
  }
  caas = {
    actionPatternObjects = {
      get_whitelist = {
        description = "view the whitelist"
      }
      alter_policies = {
        description = "create and delete policies for this caas"
      }
      read_policies = {
        description = "view all policies and policy details for this caas"
      }
    }
    ownerRoleName = "owner"
    roles = {
      owner = {
        roleActions = ["alter_policies", "read_policies"]
      }
      cromiam = {
        roleActions = ["get_whitelist"]
      }
    }
    reuseIds = false
  }
  billing-project = {
    actionPatternObjects = {
      create_workspace = {
        description = "create new workspaces in this billing-project"
      }
      alter_policies = {
        description = "create and delete policies for this billing-project"
      }
      read_policies = {
        description = "list all policies and policy details for this billing-project"
      }
      launch_batch_compute = {
        description = "launch workflows in this billing-project"
      }
      list_notebook_cluster = {
        description = "list all notebook clusters in this billing-project"
      }
      launch_notebook_cluster = {
        description = "launch a new notebook cluster in this billing-project"
      }
      sync_notebook_cluster = {
        description = ""
      }
      delete_notebook_cluster = {
        description = ""
      }
      stop_start_notebook_cluster = {
        description = "stop and start notebook clusters in this billing-project"
      }
      alter_google_role = {
        description = "modify the role of users on the google project (only a fixed set of roles are permitted)"
      }
      "share_policy::.+" = {
        description = "modify the membership of the specified policy"
      }
      "read_policy::.+" = {
        description = "view the membership of the specified policy"
      }
    }
    ownerRoleName = "owner"
    roles = {
      owner = {
        roleActions = ["create_workspace", "alter_policies", "read_policies", "launch_batch_compute", "list_notebook_cluster", "launch_notebook_cluster", "sync_notebook_cluster", "delete_notebook_cluster", "alter_google_role"]
      }
      workspace-creator = {
        roleActions = ["create_workspace", "share_policy::can-compute-user", "read_policy::can-compute-user"]
      }
      batch-compute-user = {
        roleActions = ["launch_batch_compute"]
      }
      notebook-user = {
        roleActions = ["launch_notebook_cluster"]
      }
    }
    reuseIds = true
  }
  notebook-cluster = {
    actionPatternObjects = {
      status = {
        description = "view notebook cluster status details and configuration"
      }
      connect = {
        description = "connect to the Jupyter notebook running on the notebook cluster"
      }
      sync = {
        description = "sync files to/from the notebook cluster VMs"
      }
      delete = {
        description = "delete the notebook cluster"
      }
      read_policies = {
        description = "view all policies and policy details for the notebook cluster"
      }
      stop_start = {
        description = "stop and start the notebook cluster VMs"
      }
    }
    ownerRoleName = "creator"
    roles = {
      creator = {
        roleActions = ["status", "connect", "sync", "delete", "read_policies", "stop_start"]
      }
    }
    reuseIds = true
  }
  cloud-extension = {
    actionPatternObjects = {
      get_pet_private_key = {
        description = ""
      }
      alter_policies = {
        description = ""
      }
      read_policies = {
        description = ""
      }
    }
    ownerRoleName = "owner"
    roles = {
      owner = {
        roleActions = ["alter_policies", "read_policies"]
      }
      google = {
        roleActions = ["get_pet_private_key"]
      }
    }
    reuseIds = false
  }
}
