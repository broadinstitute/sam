directory {
  url = ${DIRECTORY_URL}
  user = "cn=Directory Manager"
  user = ${?DIRECTORY_USER}
  password = ${DIRECTORY_PASSWORD}
  baseDn="dc=dsde-dev,dc=broadinstitute,dc=org"
  baseDn = ${?DIRECTORY_BASEDN}
  enabledUsersGroupDn = "cn=enabled-users,ou=groups,dc=dsde-dev,dc=broadinstitute,dc=org"
  connectionPoolSize = 5
}

googleServices {
  appName = "firecloud:sam"
  appsDomain = "dev.test.firecloud.org"
  environment = "local"
  pathToPem = "/etc/sam-account.pem"
  pathToDefaultCredentialJson = "fakePath"
  pathToFirestoreCredentialJson = "pathToJsonCredential"
  serviceAccountClientId = "109949113883754608360"
  serviceAccountClientEmail = "sam-dev-service-account@broad-dsde-dev.iam.gserviceaccount.com"
  serviceAccountClientProject = "broad-dsde-dev"
  subEmail = "google@dev.test.firecloud.org"
  projectServiceAccount = "broad-dsde-dev@gs-project-accounts.iam.gserviceaccount.com"

  billing {
    pathToBillingPem = "/etc/billing-account.pem"
    billingPemEmail = "billing@broad-dsde-dev.iam.gserviceaccount.com"
    billingEmail = "billing@test.firecloud.org"
  }

  groupSync {
    pubSubProject = proj
    pollInterval = 10ms
    pollJitter = 0s
    pubSubTopic = top
    pubSubSubscription = sub
    workerCount = 1
  }

  notifications {
    topicName = "notifications"
  }

  googleKeyCache {
    bucketName = "my-test-bucket"
    activeKeyMaxAge = 25000 #test objects default to Jan 1 1970. Cranking this value up allows for test keys to be seen as active
    retiredKeyMaxAge = 25048

    monitor {
      pubSubProject = "broad-dsde-dev"
      pollInterval = 1m
      pollJitter = 10s
      pubSubTopic = "sam-google-key-cache"
      pubSubSubscription = "sam-google-key-cache-sub"
      workerCount = 1
    }
  }

  kms {
    project = "broad-dsde-dev"
    location = "global"
    keyRingId = "not-actually-used"
    keyId = "dockerhub-key"
    rotationPeriod = "180 days"
  }
}

schemaLock {
  lockSchemaOnBoot = true
  recheckTimeInterval = 5
  maxTimeToWait = 60
  instanceId = "sam-local"
}

petServiceAccount {
  googleProject = "my-pet-project"
  serviceAccountUsers = ["some-other-sa@test.iam.gserviceaccount.com"]
}

testStuff = {
  resourceTypes = {
    testType = {
      actionPatternObjects = {
        alter_policies = {
          description = ""
          authDomainConstrainable = true
        }
        read_policies = {
          description = ""
        }
      }
      ownerRoleName = "owner"
      roles = {
        owner = {
          roleActions = ["alter_policies", "read_policies"]
        },
        nonOwner = {
          roleActions = []
        }
      }
      reuseIds = false
    }
  }
}

// Added to support https://broadinstitute.atlassian.net/browse/GAWB-3589
// See the above JIRA issue and also tests in ResourceServiceSpec.scala
// See the end of sam.conf
// https://github.com/lightbend/config/blob/master/HOCON.md#the--field-separator
resourceTypes.billing-project.actionPatterns += "delete"
testStuff.resourceTypes.testType.actionPatterns.foo = {description = "this is to ensure that actionPatterns can be either Array[String] or Array[Object]"}
resourceTypes.billing-project.roles.owner.roleActions += "delete"

// dummy value for testing only
swagger {
  googleClientId = ""
  realm = ""
}