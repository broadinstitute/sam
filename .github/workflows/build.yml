name: Scala tests with coverage

on:
  pull_request:
    paths-ignore: ['**.md']
  push:
    paths-ignore: ['**.md']

jobs:
  test:

    runs-on: ubuntu-20.04

    env:
      SBT_OPTS: >-
        -Xmx3g
        -Denv.type=test
        -Ddirectory.url=ldap://localhost:3389 -Ddirectory.password=testtesttest
        -Dpostgres.host=localhost -Dpostgres.port=5432
      ARTIFACTORY_USERNAME: ${{secrets.ARTIFACTORY_USERNAME}}
      ARTIFACTORY_PASSWORD: ${{secrets.ARTIFACTORY_PASSWORD}}

    services:
      postgres:
        image: postgres:9.6
        env:
          POSTGRES_USER: sam-test
          POSTGRES_PASSWORD: sam-test
          POSTGRES_DB: testdb
        options: >-
          --health-cmd pg_isready
          --health-interval 10s
          --health-timeout 5s
          --health-retries 5
        ports:
          - 5432:5432

    steps:
      - uses: actions/checkout@v2

      # coursier cache action caches both coursier and sbt caches
      - name: coursier-cache-action
        uses: coursier/cache-action@v5

      - name: Set up opendj
        run: |
          sh docker/run-opendj.sh start

      - name: Set up JDK 11
        uses: actions/setup-java@v1
        with:
          java-version: 11

      - name: Git secrets setup
        run: |
          git clone https://github.com/awslabs/git-secrets.git ~/git-secrets
          cd ~/git-secrets
          git checkout ad82d68ee924906a0401dfd48de5057731a9bc84
          sudo make install

      - name: Secrets check
        run: |
          ./minnie-kenny.sh --force
          git secrets --scan-history

      - name: Integration tests
        id: tests
        run: sbt clean "testOnly -- -n org.broadinstitute.tags.SchemaInit"

      - name: Generate coverage report
        id: coverageReport
        run: sbt coverage "testOnly -- -l org.broadinstitute.tags.SchemaInit" coverageReport

      - name: Shut down opendj
        run: |
          sh docker/run-opendj.sh stop

  generateAndPublishClient:
    runs-on: ubuntu-20.04
    needs: test

    env:
      ARTIFACTORY_USERNAME: ${{secrets.ARTIFACTORY_USERNAME}}
      ARTIFACTORY_PASSWORD: ${{secrets.ARTIFACTORY_PASSWORD}}
      SBT_OPTS: -Xmx3g

    steps:
      - uses: actions/checkout@v2

      # coursier cache action caches both coursier and sbt caches
      - name: coursier-cache-action
        uses: coursier/cache-action@v5

      - name: Extract branch name
        shell: bash
        run: echo "##[set-output name=branch;]$(echo ${GITHUB_REF#refs/heads/})"
        id: extractBranch

      - name: Generate java client
        id: generateJavaClient
        run: bash scripts/gen_java_client.sh

      - name: Publish java client for merge
        id: publishJavaClientSnapshot
        if: ${{steps.extractBranch.outputs.branch == 'develop'}}
        run: |
          run: cd codegen_java
          sbt "+ publish" -Dproject.isSnapshot=false

      - name: Publish java client as snapshot for PRs
        id: publishJavaClient
        if: ${{steps.extractBranch.outputs.branch != 'develop'}}
        run: |
          run: cd codegen_java
          sbt "+ publish" -Dproject.isSnapshot=true
